<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<title>Wildfire Data SVG Drawing Practice</title>
	<script src= "https://d3js.org/d3.v7.min.js"></script>
	<style type="text/css"> 
		svg{
			width:1200px;
			height:1200px;
		}
		.slider{
			width: 25%;
			height:15px;
			border-radius: 5px;
			background: #d3d3d3;
			outline: none;
			opacity: 0.8;
		}
		.slider::-moz-range-thumb{
			width: 25px;
			height: 25px;
			border-radius: 50%;
			background: midnightblue;
			cursor: pointer;
		}    
		.title {
    font-size: 24px;
    font-weight: bold;
    font-family: Georgia, serif;
    font-kerning: initial;
  	}

    .labels{
      font-size: 13px;
      font-weight: normal;
      font-family: Georgia, sans-serif;
    }
		datalist{
			display: flex;
			width: 25%;
			justify-content: space-between;
			margin-top: -10px;
			padding-top: 0px;
		}

		option{
			width: 23ex;
			display: flex;
			justify-content: center;
			height: 30px;
			align-items: end;
		}

	</style>
</head>
<body>
	<svg></svg>
	<div id="container">
		<input id="mySlider" type="range" min="2002" max="2021" step="1" value="2002" class="slider" list="list">
		<datalist id="list">
			<option>2002</option>
			<option>2003</option>
			<option>2004</option>
			<option>2005</option>
			<option>2006</option>
			<option>2007</option>
			<option>2008</option>
			<option>2009</option>
			<option>2010</option>
			<option>2011</option>
			<option>2012</option>
			<option>2013</option>
			<option>2014</option>
			<option>2015</option>
			<option>2016</option>
			<option>2017</option>
			<option>2018</option>
			<option>2019</option>
			<option>2020</option>
			<option>2021</option>
		</datalist>
	</div>

	<script type="text/javascript">


		const draw = ["M200,200 C130,120 220,70 210,50 C260,80 210,100 240,140 C210,100 280,80 240,10 C310,60 310,80 303,90 C298,100 306,120 306,120 C285,70 340,80 320,40 C400,80 380,180 360,200 C330,230 230,230, 200,200"];

		let num = 2002;

		function update(num){

		dataset = d3.csv("YearFiresAcres.csv").then(dataset => {  

			dataset.forEach(d => {
				d.Year = d.Year;
				d.Fires = d.Fires;
				d.Acres = d.Acres;
			});

			const maxData = d3.max(dataset, d=>d.Fires);
			const minData = d3.min(dataset, d=>d.Fires);
			const myColor = d3.scaleQuantize()
			.domain([minData, maxData])
			.range(['#ffffcc','#ffeda0','#fed976','#feb24c','#fd8d3c','#fc4e2a','#e31a1c','#bd0026','#800026']);
			const myColor2 = d3.scaleQuantize()
			.domain([d3.max(dataset, d=>d.Acres), d3.min(dataset, d=>d.Acres)])
			.range(['#fb6a4a','#de2d26','#a50f15']);
			const size = 180;
			const sizeY = 180;

			const svg = d3.select("svg");


			
				const g = svg.selectAll("g")
				.data(dataset)
				.join("g")
				.filter(function(d){return d.Year==num});

				g.append("path")
				.attr("d", draw)
				.attr("stroke-width", 3)
				.attr("fill", d=> myColor(d.Fires))
				.attr("stroke", "red")
				.attr("transform", "scale(.5)");

				//Make Labels
				g.append("text")
				.attr("x", size/2) //x coordinate
				.attr("y", size) //y coordinate
				.attr("text-anchor", "middle") //horizontal text alignment 
				.attr("dx", "50px")//x coordinate offset
				.attr("dy", "-40px") //y coordinate offset
				.attr("font-family", "Georgia, sans-serif")
				.attr("font-weight", "bold")
				.text(d=>d.Year); //the text


				g.append("text")
				.attr("x", size/2) //x coordinate
				.attr("y", size) //y coordinate
				.attr("text-anchor", "middle") //horizontal text alignment 
				.attr("dx", "50px")//x coordinate offset
				.attr("dy", "-20px") //y coordinate offset
				.attr("class","labels")
				.attr("fill", d=>myColor2(d.Acres))
				.text(d=>d.Acres + " Acres Burned"); //the text 





				//Make Title (Note the difference between svg.append text and g.append text) 
				svg.append("text")
				.attr("x", 675) //x coordinate
				.attr("y", 50) //y coordinate
				.attr("text-anchor", "middle") //horizontal text alignment
				.attr("fill", "#AA4A44")
				.attr("class", "title")
				.text("Wildfires in the Last 20 Years (Darker = More Fires)"); //the text 

				console.log(dataset)

				});
			};

			d3.select("input")
			.on("change", (event, d) => {

				d3.selectAll(remove)
        .transition()
        .remove();

				num = event.currentTarget.value;
				g.attr("d", draw)
				.attr("stroke-width", 3)
				.attr("fill", d=> myColor(d.Fires))
				.attr("stroke", "red")
				.attr("transform", "scale(.5)")
				.filter(function(d){return d.Year==num});
				//update(num)

			});
			update(num)




</script>
</body>
</html>